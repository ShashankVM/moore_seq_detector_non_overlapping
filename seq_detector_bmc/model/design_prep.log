
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite -- YosysHQ Edition [202302081344]     |
 |                                                                            |
 |  Copyright (C) 2012 - 2023 YosysHQ GmbH                                    |
 |                                                                            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.26 (git sha1 7e588664e, clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Executing script file `design_prep.ys' --

1. Executing RTLIL frontend.
Input filename: design.il

2. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module seq_detector.
Found 0 SCCs.

3. Executing SIMPLEMAP pass (map simple cells to gate primitives).

4. Executing MEMORY_NORDFF pass (extracting $dff cells from memories).

5. Executing ASYNC2SYNC pass.
Replacing seq_detector.$verific$state_reg$seq_detector.sv:12$55 ($aldff): ALOAD=\reset, AD=5'00001, D=\next, Q=\state
Replacing seq_detector.$verific$detect_out_reg$seq_detector.sv:30$68 ($aldff): ALOAD=\reset, AD=1'0, D=$verific$n51$7, Q=\detect_out
Replacing seq_detector.$auto$verificsva.cc:362:getAccept$263 ($adff): ARST=\reset, D=$auto$verificsva.cc:293:getAccept$139, Q=$auto$verificsva.cc:293:getAccept$221
Replacing seq_detector.$auto$verificsva.cc:362:getAccept$173 ($adff): ARST=\reset, D=$auto$rtlil.cc:2429:And$149, Q=$auto$verificsva.cc:293:getAccept$139
Replacing seq_detector.$auto$verificsva.cc:362:getAccept$172 ($adff): ARST=\reset, D=$auto$rtlil.cc:2429:And$159, Q=$auto$verificsva.cc:293:getAccept$137
Replacing seq_detector.$auto$verificsva.cc:362:getAccept$171 ($adff): ARST=\reset, D=$auto$rtlil.cc:2429:And$143, Q=$auto$verificsva.cc:293:getAccept$134
Replacing seq_detector.$auto$verificsva.cc:362:getAccept$170 ($adff): ARST=\reset, D=$auto$rtlil.cc:2429:And$155, Q=$auto$verificsva.cc:293:getAccept$132
Replacing seq_detector.$auto$verificsva.cc:1814:import$271 ($adff): ARST=\reset, D=$auto$rtlil.cc:2429:And$236, Q=$auto$verificsva.cc:1812:import$269
Replacing seq_detector.$auto$verificsva.cc:1814:import$205 ($adff): ARST=\reset, D=$auto$rtlil.cc:2399:Not$197, Q=$auto$verificsva.cc:1812:import$203
Replacing seq_detector.$auto$verificsva.cc:1814:import$194 ($adff): ARST=\reset, D=$auto$rtlil.cc:2403:ReduceOr$186, Q=$auto$verificsva.cc:1812:import$192
Replacing seq_detector.$auto$verificsva.cc:1814:import$124 ($adff): ARST=\reset, D=$auto$rtlil.cc:2399:Not$116, Q=$auto$verificsva.cc:1812:import$122
Replacing seq_detector.$auto$verificsva.cc:1813:import$270 ($adff): ARST=\reset, D=1'1, Q=$auto$verificsva.cc:1811:import$268
Replacing seq_detector.$auto$verificsva.cc:1813:import$204 ($adff): ARST=\reset, D=$auto$rtlil.cc:2399:Not$199, Q=$auto$verificsva.cc:1811:import$202
Replacing seq_detector.$auto$verificsva.cc:1813:import$193 ($adff): ARST=\reset, D=$auto$rtlil.cc:2399:Not$188, Q=$auto$verificsva.cc:1811:import$191
Replacing seq_detector.$auto$verificsva.cc:1813:import$123 ($adff): ARST=\reset, D=$auto$rtlil.cc:2399:Not$118, Q=$auto$verificsva.cc:1811:import$121

6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \seq_detector..

7. Executing FORMALFF pass.

8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \seq_detector..
Removed 8 unused cells and 8 unused wires.
<suppressed ~9 debug messages>

9. Executing CHECK pass (checking for obvious problems).
Checking module seq_detector...
Found and reported 0 problems.

10. Executing SETUNDEF pass (replace undef values with defined constants).

11. Executing OPT pass (performing simple optimizations).

11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module seq_detector.

11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\seq_detector'.
Removed a total of 0 cells.

11.3. Executing OPT_DFF pass (perform DFF optimizations).

11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \seq_detector..
Removed 4 unused cells and 4 unused wires.
<suppressed ~5 debug messages>

11.5. Finished fast OPT passes.

12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \seq_detector..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

13. Executing RTLIL backend.
Output filename: ../model/design_prep.il

End of script. Logfile hash: b5677c26a6, CPU: user 0.04s system 0.01s, MEM: 21.42 MB peak
Yosys 0.26 (git sha1 7e588664e, clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 39% 4x opt_clean (0 sec), 14% 1x opt_expr (0 sec), ...
