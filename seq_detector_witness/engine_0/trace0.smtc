initial
assume (= [$auto$async2sync.cc:139:execute$250] #b00001)
assume (= [$auto$async2sync.cc:171:execute$257] #b0)
assume (= [$auto$async2sync.cc:171:execute$259] #b0)
assume (= [$auto$async2sync.cc:171:execute$261] #b0)
assume (= [$auto$async2sync.cc:171:execute$263] #b0)
assume (= [$auto$async2sync.cc:171:execute$265] #b0)
assume (= [$auto$async2sync.cc:171:execute$267] #b0)
assume (= [$auto$async2sync.cc:171:execute$269] #b0)
assume (= [$auto$async2sync.cc:171:execute$271] #b0)
assume (= [$auto$async2sync.cc:171:execute$273] #b0)
assume (= [$auto$async2sync.cc:171:execute$275] #b0)
assume (= [$auto$async2sync.cc:171:execute$277] #b0)
assume (= [$verific$i26$seq_detector.sv:39$66] #b0)
assume (= [_witness_.anyinit_verific_detect_out_reg_seq_detector_sv_31_63] #b0)

state 0
assume (= [clk] false)
assume (= [reset] #b0)
assume (= [seq_in] true)

state 1
assume (= [clk] false)
assume (= [reset] #b0)
assume (= [seq_in] false)

state 2
assume (= [clk] false)
assume (= [reset] #b0)
assume (= [seq_in] true)

state 3
assume (= [clk] false)
assume (= [reset] #b0)
assume (= [seq_in] true)

state 4
assume (= [clk] false)
assume (= [reset] #b0)
assume (= [seq_in] false)

state 5
assume (= [clk] false)
assume (= [reset] #b0)
assume (= [seq_in] false)

state 6
assume (= [clk] false)
assume (= [reset] #b0)
assume (= [seq_in] false)
