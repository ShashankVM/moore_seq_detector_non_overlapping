initial
assume (= [$auto$async2sync.cc:171:execute$281] #b0)
assume (= [$auto$async2sync.cc:171:execute$283] #b0)
assume (= [$auto$async2sync.cc:171:execute$285] #b0)
assume (= [$auto$async2sync.cc:171:execute$287] #b0)
assume (= [$auto$async2sync.cc:171:execute$289] #b0)
assume (= [$auto$async2sync.cc:171:execute$291] #b0)
assume (= [$auto$async2sync.cc:171:execute$293] #b0)
assume (= [$auto$async2sync.cc:171:execute$295] #b0)
assume (= [$auto$async2sync.cc:171:execute$297] #b0)
assume (= [$auto$async2sync.cc:171:execute$299] #b0)
assume (= [$auto$async2sync.cc:171:execute$301] #b0)
assume (= [$auto$async2sync.cc:171:execute$303] #b0)
assume (= [$auto$async2sync.cc:171:execute$305] #b0)
assume (= [$verific$i32$seq_detector.sv:42$79] #b0)
assume (= [_witness_.anyinit_verific_detect_out_reg_seq_detector_sv_30_68] #b0)
assume (= [_witness_.anyinit_verific_state_reg_seq_detector_sv_12_55] #b00000)

state 0
assume (= [clk] false)
assume (= [reset] #b1)
assume (= [seq_in] false)

state 1
assume (= [clk] false)
assume (= [reset] #b0)
assume (= [seq_in] true)

state 2
assume (= [clk] false)
assume (= [reset] #b0)
assume (= [seq_in] false)

state 3
assume (= [clk] false)
assume (= [reset] #b0)
assume (= [seq_in] true)

state 4
assume (= [clk] false)
assume (= [reset] #b0)
assume (= [seq_in] true)

state 5
assume (= [clk] false)
assume (= [reset] #b0)
assume (= [seq_in] false)

state 6
assume (= [clk] false)
assume (= [reset] #b0)
assume (= [seq_in] false)

state 7
assume (= [clk] false)
assume (= [reset] #b0)
assume (= [seq_in] false)
